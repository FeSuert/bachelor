use anchor_lang::prelude::*;
use solana_program::program_error::ProgramError;

declare_id!("F1234567890123456789012345678901234567890");

#[program]
pub mod owner_check {
    use super::*;

    pub fn get_market_price(ctx: Context<GetPrice>) -> Result<u64> {
        let accounts_iter = &mut ctx.remaining_accounts.iter();
        let pyth_price_info = next_account_info(accounts_iter)?;

        let market_price = get_pyth_price(pyth_price_info)?;

        Ok(market_price)
    }

    // Simulated function to get price from Pyth account
    fn get_pyth_price(_pyth_price_info: &AccountInfo) -> Result<u64> {
        // Implementation to extract price from Pyth account data
        // For illustration purposes, we'll just return a dummy value
        Ok(100) // Dummy market price
    }
}

// #[derive(Accounts)]
// pub struct GetPrice<'info> {
//     #[account(mut)]
//     pub remaining_accounts: AccountInfo<'info>,
// }

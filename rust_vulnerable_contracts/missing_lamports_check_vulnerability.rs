use anchor_lang::prelude::*;

declare_id!("F1234567890123456789012345678901234567890");

#[program]
pub mod lamports_check {
    use super::*;

    pub fn read_account_data(ctx: Context<ReadData>) -> Result<()> {
        let data_account = &ctx.accounts.data_account;

        msg!("Data account lamports: {}", **data_account.lamports.borrow());
        msg!("Data account data length: {}", data_account.data.borrow().len());

        Ok(())
    }
}

#[derive(Accounts)]
pub struct ReadData<'info> {
    #[account(mut)]
    pub data_account: AccountInfo<'info>,
}


// Recommendation:

// if **the_account_to_read.try_borrow_lamports()? > 0 {
//     //logic here
// }
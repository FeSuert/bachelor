use anchor_lang::prelude::*;

declare_id!("F1234567890123456789012345678901234567890");

#[program]
pub mod signer_check {
    use super::*;

    pub fn update_market_info(ctx: Context<UpdateMarket>, updated_name: String, updated_description: String) -> Result<()> {
        let market = &mut ctx.accounts.market;
        market.name = updated_name;
        market.description = updated_description;
        Ok(())
    }
}

#[derive(Accounts)]
pub struct UpdateMarket<'info> {
    #[account(mut)]
    pub market: Account<'info, MarketAccount>,
}

#[account]
pub struct MarketAccount {
    pub admin: Pubkey,
    pub name: String,
    pub description: String,
}

// Recommendation:
// let payer_account = next_account_info(accounts_iter)?;
// if !payer_account.is_signer {
//     return Err(ProgramError::MissingRequiredSignature);
// }
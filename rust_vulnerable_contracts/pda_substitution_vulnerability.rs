use anchor_lang::prelude::*;
use anchor_lang::solana_program::pubkey::Pubkey;

declare_id!("F1234567890123456789012345678901234567890");

#[program]
pub mod pda {
    use super::*;

    pub fn create_user_account(ctx: Context<CreateUser>, bump: u8) -> Result<()> {
        let account_info_iter = &mut ctx.remaining_accounts.iter();
        let config_pda_info = next_account_info(account_info_iter)?;

        let seeds = &[b"user_pda_desc".as_ref(), config_pda_info.key.as_ref(), &[bump]];
        let user_pda_pubkey = Pubkey::create_program_address(seeds, &ctx.program_id)?;
        
        Ok(())
    }
}

#[derive(Accounts)]
pub struct CreateUser<'info> {
    // Define relevant accounts here
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

//Recommendation: We recommend creating a PDA based on a unique account, it is usually an initial configuration account.